#!/usr/bin/env node
require("dotenv").config();
const connectToDatabase = require("../config/database");
const path = require("path");
const fs = require("fs");
const repl = require("repl");
const mongoose = require("mongoose");

(async () => {
  try {
    // ‚úÖ Attendre que la connexion soit √©tablie
    await connectToDatabase();
    console.log("‚úÖ Connexion MongoDB √©tablie !");
    console.log("üîπ Tape await mongoose.disconnect() pour quitter proprement.");
    console.log("üîπ Utilise [Model].find() pour interroger la base.");

    // üìå D√©tection automatique du dossier `models`
    const possiblePaths = ["models", "src/models"];
    let modelsPath = possiblePaths.find((p) =>
      fs.existsSync(path.join(__dirname, "..", p))
    );

    if (!modelsPath) {
      console.error("‚ùå Aucun dossier 'models' trouv√© !");
      process.exit(1);
    }

    // üìå Chargement dynamique des mod√®les Mongoose
    const models = {};
    fs.readdirSync(path.join(__dirname, "..", modelsPath))
      .filter((file) => file.endsWith(".js"))
      .forEach((file) => {
        const modelName = path.basename(file, ".js");
        models[modelName] = require(path.join(
          __dirname,
          "..",
          modelsPath,
          file
        ));
      });

    console.log("‚ÑπÔ∏è  Mod√®les disponibles :", Object.keys(models).join(", "));

    // üìå D√©marrage de la console REPL avec les mod√®les inject√©s
    const replServer = repl.start("> ");
    replServer.context.mongoose = mongoose;

    Object.entries(models).forEach(([name, model]) => {
      replServer.context[name] = model;
    });

    // üöÄ Gestion propre de CTRL+C
    replServer.on("exit", async () => {
      console.log("\nüõë Fermeture de la connexion MongoDB...");
      await mongoose.disconnect();
      console.log("‚úÖ D√©connect√© proprement.");
      process.exit(0);
    });

    // üöÄ Capture SIGINT pour √©viter la r√©p√©tition
    process.on("SIGINT", async () => {
      replServer.close(); // D√©clenche l'√©v√©nement "exit"
    });
  } catch (error) {
    console.error("‚ùå Erreur de connexion MongoDB :", error);
    process.exit(1);
  }
})();
